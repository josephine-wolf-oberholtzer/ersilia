# -*- encoding: utf-8 -*-
from abjad.tools import datastructuretools
from abjad.tools import indicatortools
from abjad.tools import lilypondnametools
from abjad.tools import markuptools
from abjad.tools import pitchtools
from abjad.tools import rhythmmakertools
from abjad.tools import schemetools
from abjad.tools import scoretools
from abjad.tools import selectortools
import consort


guitar_strummed_music_specifier = consort.tools.MusicSpecifier(
    attachment_handler=consort.tools.AttachmentHandler(
        damped=consort.tools.AttachmentExpression(
            attachments=datastructuretools.TypedList(
                [
                    consort.tools.LeafExpression(
                        leaf=scoretools.Note("f'4"),
                        attachments=(
                            lilypondnametools.LilyPondGrobOverride(
                                grob_name='NoteHead',
                                is_once=True,
                                property_path=('transparent',),
                                value=True,
                                ),
                            markuptools.Markup(
                                contents=(
                                    markuptools.MarkupCommand(
                                        'musicglyph',
                                        schemetools.Scheme(
                                            'scripts.coda',
                                            force_quotes=True,
                                            )
                                        ),
                                    ),
                                direction=Up,
                                ),
                            indicatortools.Articulation('accent'),
                            indicatortools.Dynamic(
                                name='sfz',
                                ),
                            ),
                        ),
                    ]
                ),
            selector=selectortools.Selector(
                callbacks=(
                    selectortools.LogicalTieSelectorCallback(
                        flatten=True,
                        pitched=True,
                        trivial=True,
                        only_with_head=False,
                        only_with_tail=False,
                        ),
                    selectortools.ContiguitySelectorCallback(),
                    selectortools.LengthSelectorCallback(
                        length=selectortools.LengthInequality(
                            operator_string='>',
                            length=1,
                            ),
                        ),
                    selectortools.PrototypeSelectorCallback(
                        prototype=scoretools.Leaf,
                        ),
                    selectortools.ItemSelectorCallback(
                        item=-1,
                        apply_to_each=True,
                        ),
                    ),
                ),
            is_destructive=True,
            ),
        dynamic_expressions=consort.tools.AttachmentExpression(
            attachments=datastructuretools.TypedList(
                [
                    consort.tools.DynamicExpression(
                        dynamic_tokens=datastructuretools.CyclicTuple(
                            ['p', 'ppp', 'p', 'ppp', 'mf', 'p']
                            ),
                        only_first=True,
                        transitions=datastructuretools.CyclicTuple(
                            [None]
                            ),
                        ),
                    ]
                ),
            ),
        laissez_vibrer=consort.tools.AttachmentExpression(
            attachments=datastructuretools.TypedList(
                [
                    [
                        indicatortools.LaissezVibrer(),
                        markuptools.Markup(
                            contents=(
                                markuptools.MarkupCommand(
                                    'pad-around',
                                    0.5,
                                    markuptools.MarkupCommand(
                                        'box',
                                        markuptools.MarkupCommand(
                                            'pad-around',
                                            0.5,
                                            markuptools.MarkupCommand(
                                                'tiny',
                                                markuptools.MarkupCommand(
                                                    'caps',
                                                    'L.V'
                                                    )
                                                )
                                            )
                                        )
                                    ),
                                ),
                            direction=Up,
                            ),
                        ],
                    ]
                ),
            selector=selectortools.Selector(
                callbacks=(
                    selectortools.LogicalTieSelectorCallback(
                        flatten=True,
                        pitched=True,
                        trivial=True,
                        only_with_head=False,
                        only_with_tail=False,
                        ),
                    selectortools.ContiguitySelectorCallback(),
                    selectortools.LengthSelectorCallback(
                        length=selectortools.LengthInequality(
                            operator_string='==',
                            length=1,
                            ),
                        ),
                    selectortools.PrototypeSelectorCallback(
                        prototype=scoretools.Leaf,
                        ),
                    selectortools.ItemSelectorCallback(
                        item=0,
                        apply_to_each=True,
                        ),
                    ),
                ),
            ),
        ),
    pitch_handler=consort.tools.AbsolutePitchHandler(
        logical_tie_expressions=datastructuretools.CyclicTuple(
            [
                consort.tools.ChordExpression(
                    chord_expr=pitchtools.PitchSegment(
                        (
                            pitchtools.NamedPitch('d'),
                            pitchtools.NamedPitch("c'"),
                            pitchtools.NamedPitch("f'"),
                            pitchtools.NamedPitch("a'"),
                            ),
                        item_class=pitchtools.NamedPitch,
                        ),
                    arpeggio_direction=Center,
                    ),
                consort.tools.ChordExpression(
                    chord_expr=pitchtools.PitchSegment(
                        (
                            pitchtools.NamedPitch('df'),
                            pitchtools.NamedPitch('bf'),
                            pitchtools.NamedPitch("e'"),
                            pitchtools.NamedPitch("a'"),
                            ),
                        item_class=pitchtools.NamedPitch,
                        ),
                    arpeggio_direction=Center,
                    ),
                consort.tools.ChordExpression(
                    chord_expr=pitchtools.PitchSegment(
                        (
                            pitchtools.NamedPitch('c'),
                            pitchtools.NamedPitch('g'),
                            pitchtools.NamedPitch('bf'),
                            pitchtools.NamedPitch("ef'"),
                            pitchtools.NamedPitch("a'"),
                            ),
                        item_class=pitchtools.NamedPitch,
                        ),
                    arpeggio_direction=Center,
                    ),
                consort.tools.ChordExpression(
                    chord_expr=pitchtools.PitchSegment(
                        (
                            pitchtools.NamedPitch('b,'),
                            pitchtools.NamedPitch('gf'),
                            pitchtools.NamedPitch('a'),
                            pitchtools.NamedPitch("d'"),
                            pitchtools.NamedPitch("af'"),
                            ),
                        item_class=pitchtools.NamedPitch,
                        ),
                    arpeggio_direction=Center,
                    ),
                consort.tools.ChordExpression(
                    chord_expr=pitchtools.PitchSegment(
                        (
                            pitchtools.NamedPitch('c'),
                            pitchtools.NamedPitch('g'),
                            pitchtools.NamedPitch('b'),
                            pitchtools.NamedPitch("e'"),
                            pitchtools.NamedPitch("a'"),
                            ),
                        item_class=pitchtools.NamedPitch,
                        ),
                    arpeggio_direction=Center,
                    ),
                consort.tools.ChordExpression(
                    chord_expr=pitchtools.PitchSegment(
                        (
                            pitchtools.NamedPitch('f'),
                            pitchtools.NamedPitch('bf'),
                            pitchtools.NamedPitch("ef'"),
                            pitchtools.NamedPitch("g'"),
                            pitchtools.NamedPitch("c''"),
                            ),
                        item_class=pitchtools.NamedPitch,
                        ),
                    arpeggio_direction=Center,
                    ),
                consort.tools.ChordExpression(
                    chord_expr=pitchtools.PitchSegment(
                        (
                            pitchtools.NamedPitch('e'),
                            pitchtools.NamedPitch('a'),
                            pitchtools.NamedPitch("d'"),
                            pitchtools.NamedPitch("fs'"),
                            pitchtools.NamedPitch("b'"),
                            ),
                        item_class=pitchtools.NamedPitch,
                        ),
                    arpeggio_direction=Center,
                    ),
                consort.tools.ChordExpression(
                    chord_expr=pitchtools.PitchSegment(
                        (
                            pitchtools.NamedPitch('ef'),
                            pitchtools.NamedPitch('af'),
                            pitchtools.NamedPitch("df'"),
                            pitchtools.NamedPitch("f'"),
                            pitchtools.NamedPitch("bf'"),
                            ),
                        item_class=pitchtools.NamedPitch,
                        ),
                    arpeggio_direction=Center,
                    ),
                consort.tools.ChordExpression(
                    chord_expr=pitchtools.PitchSegment(
                        (
                            pitchtools.NamedPitch('d'),
                            pitchtools.NamedPitch('g'),
                            pitchtools.NamedPitch("c'"),
                            pitchtools.NamedPitch("e'"),
                            pitchtools.NamedPitch("a'"),
                            ),
                        item_class=pitchtools.NamedPitch,
                        ),
                    arpeggio_direction=Center,
                    ),
                consort.tools.ChordExpression(
                    chord_expr=pitchtools.PitchSegment(
                        (
                            pitchtools.NamedPitch('d'),
                            pitchtools.NamedPitch('b'),
                            pitchtools.NamedPitch("d'"),
                            pitchtools.NamedPitch("f'"),
                            pitchtools.NamedPitch("a'"),
                            ),
                        item_class=pitchtools.NamedPitch,
                        ),
                    arpeggio_direction=Center,
                    ),
                consort.tools.ChordExpression(
                    chord_expr=pitchtools.PitchSegment(
                        (
                            pitchtools.NamedPitch('d'),
                            pitchtools.NamedPitch('f'),
                            pitchtools.NamedPitch("c'"),
                            pitchtools.NamedPitch("d'"),
                            pitchtools.NamedPitch("g'"),
                            ),
                        item_class=pitchtools.NamedPitch,
                        ),
                    arpeggio_direction=Center,
                    ),
                consort.tools.ChordExpression(
                    chord_expr=pitchtools.PitchSegment(
                        (
                            pitchtools.NamedPitch('d'),
                            pitchtools.NamedPitch('f'),
                            pitchtools.NamedPitch('b'),
                            pitchtools.NamedPitch("d'"),
                            pitchtools.NamedPitch("g'"),
                            ),
                        item_class=pitchtools.NamedPitch,
                        ),
                    arpeggio_direction=Center,
                    ),
                ]
            ),
        ),
    rhythm_maker=rhythmmakertools.IncisedRhythmMaker(
        incise_specifier=rhythmmakertools.InciseSpecifier(
            prefix_talea=(1,),
            prefix_counts=(1, 1, 1, 2, 1, 2, 3),
            talea_denominator=16,
            fill_with_notes=False,
            ),
        ),
    )